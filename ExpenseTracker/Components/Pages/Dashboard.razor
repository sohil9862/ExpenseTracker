@page "/Dashboard"
@using System.Text.Json
@using DataModel.Model
@inject NavigationManager Nav
@inject TransactionService TransactionService
@inject DebtService DebtService

<style>
    /* Container Layout */
    .dashboard-container {
        display: grid;
        grid-template-areas:
            "buttons balance"
            "charts charts"
            "details details";
        gap: 30px;
        padding: 30px;
        background-color: #f4f7fc;
    }

    /* Buttons Section */
    .buttons-section {
        display: flex;
        justify-content: flex-end; /* Align buttons to the right */
        gap: 20px;
        margin-top: 20px;
    }

    .btn {
        font-size: 16px;
        padding: 10px 20px;
        border-radius: 8px;
        transition: all 0.3s ease;
        font-weight: bold;
        background-color: #3498db; /* Uniform Blue Color */
        color: white;
    }

        /* Button Hover Effects */
        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

    /* Balance Section */
    .balance-section {
        font-size: 32px;
        font-weight: 600;
        color: #2c3e50;
        background-color: #ecf0f1;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        text-align: center;
    }

    /* Cash Flow In and Out Section */
    .cashflow-section {
        display: flex;
        justify-content: space-between;
        gap: 20px;
    }

    .cashflow-box {
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        width: 48%;
    }

        .cashflow-box h4 {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .cashflow-box .amount {
            font-size: 2rem;
            font-weight: 600;
        }

    /* Transactions and Debts Section Container */
    .transaction-debts-container {
        display: flex;
        justify-content: space-between;
        gap: 30px; /* Space between transaction and debt sections */
        margin-top: 30px;
    }

    /* Wrapper Box for Transactions and Debts */
    .transaction-debts-box {
        display: flex;
        justify-content: space-between;
        gap: 30px;
        background-color: #fff;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    /* Transaction Box */
    .transaction-box {
        width: 48%; /* Adjust width to fit two boxes in one row */
        background-color: #f8f8f8;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 15px;
    }

        .transaction-box .transaction-details {
            font-size: 14px;
            color: #555;
        }

    /* Debt Box */
    .debt-item {
        width: 48%; /* Adjust width to fit two boxes in one row */
        background-color: #f8f8f8;
        padding: 15px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 15px;
    }

    .pending-debts h4 {
        margin-top: 20px;
    }

    /* Cash Flow Stats */
    .stat {
        margin-bottom: 20px;
    }

        .stat h4 {
            font-size: 1.2rem;
            font-weight: bold;
        }

        .stat .amount {
            font-size: 2rem;
            font-weight: 600;
            color: #28a745; /* Green for Cash Flow In */
        }

            .stat .amount.danger {
                color: #dc3545; /* Red for Cash Flow Out */
            }
</style>

<!-- Buttons Section -->
<div class="buttons-section">
    <button class="btn" @onclick="GoToAddTransaction">Add Transaction</button>
    <button class="btn" @onclick="GoToHistory">History</button>
    <button class="btn" @onclick="NavigateToPendingDebts">Pending Debts</button>
    <button class="btn" @onclick="Logout">Log Out</button>
    
</div>

<!-- Total Transactions and Count Section -->
<div class="stat">
    <h4>Total Transactions</h4>
    <p class="amount">Count: @TotalTransactionCount</p>
    <p class="amount">Total: Rs. @TotalTransactions</p>
</div>

<!-- Total Balance -->
<div>
    <p><strong>Total Balance:</strong> Rs. @currentBalance</p>
</div>

<!-- Cash Flow In and Out Section -->
<div class="cashflow-section">
    <div class="cashflow-box">
        <h4>Cash Flow In</h4>
        <p class="amount">Rs. @CashFlowIn</p>
    </div>
    <div class="cashflow-box">
        <h4>Cash Flow Out</h4>
        <p class="amount danger">Rs. @CashFlowOut</p>
    </div>
</div>

<!-- Debt Flow In and Out Section -->
<div class="cashflow-section">
    <div class="cashflow-box">
        <h4>Remaining Debts</h4>
        <p class="amount">Rs. @RemainingDebts</p>
    </div>
    <div class="cashflow-box">
        <h4>Cleared Debts</h4>
        <p class="amount danger">Rs. @ClearedDebts</p>
    </div>
</div>

<!-- Transaction and Pending Debts Section -->
<div class="transaction-debts-box">
    <!-- Transactions Section -->
    <div class="transaction-box">
        <h4>Recent Transactions</h4>
        @foreach (var transaction in Transactions)
        {
            <div class="transaction-box">
                <strong class="d-block mb-2">@transaction.Type</strong>
                <div class="transaction-details">
                    <p><strong>Amount:</strong> Rs. @transaction.Amount</p>
                    <p><strong>Date:</strong> @transaction.TransactionDate.ToString("yyyy/MM/dd")</p>
                </div>
            </div>
        }
    </div>

    <!-- Pending Debts Section -->
    <div class="debt-item">
        <h4>Pending Debts</h4>
        @foreach (var debt in GetTopPendingDebts())
        {
            <div class="debt-item">
                <div class="debt-details">
                    <p><strong>Amount:</strong> Rs. @debt.DebtAmount</p>
                    <p><strong>Source:</strong> @debt.DebtSource</p>
                    <p><strong>Due Date:</strong> @debt.DueDate.ToString("yyyy/MM/dd")</p>
                </div>
            </div>
        }
    </div>
</div>
